<!DOCTYPE html>
<!-- saved from url=(0102)https://public-api.wordpress.com/connect/?googleplus-sign-in=http%3A%2F%2Fsekharpadikkal.wordpress.com -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<meta charset="UTF-8">
		<title>Google+ sign-in iframe</title>
		<script src="cb=gapi.loaded_1" async=""></script><script src="cb=gapi.loaded_0" async=""></script><script type="text/javascript" src="postmessage.js"></script>
		<script type="text/javascript" src="jquery.js"></script>
	</head>
	<body style="margin: 0px; padding: 0px;">

		<style type="text/css">
			div#customButton {
				display: inline-block;
				background: transparent;
				width: 16px;
				height: 16px;
				opacity: 0.8;
				margin: 4px;
				padding: 0;
			}
			div#customButton:hover {
				cursor: pointer;
				opacity: 1.0;
			}
			#customButton span.icon {
				background: url('//s0.wp.com/wp-content/mu-plugins/post-flair/sharing/images/googleplus1.png') transparent center center no-repeat;
				display: inline-block;
				width: 16px;
				height: 16px;
			}
			#customButton span.buttonText {
				display: none;
			}
		</style>

		<script type="text/javascript">
			var googlePlusButtonHasBeenClicked = false;

			/**
			 * On ready, bind a click handler to our custom button - this click handler will
			 * not be the only one - google will add their own in googlePlusButtonRender too
			 * But this way we can know when the user has initiated a Google+ login
			 * so we can display the loading graphic in the highlander comment form
			 */
			jQuery( document ).ready( function() {
				googlePlusButtonHasBeenClicked = false;
				jQuery( '#customButton' ).click( googlePlusOnClickCustomButton );
			} );

			/**
			 * Let our parent know the user clicked on the Google+ button
			 */
			function googlePlusOnClickCustomButton() {
				googlePlusButtonHasBeenClicked = true;

				pm( {
					target: window.parent,
					type: 'googlePlusButtonClick',
					data: 0,
					origin: 'http://sekharpadikkal.wordpress.com'
				} );
			}

			/**
			 * This callback is hit 1) when the Google library has rendered the custom button
			 * and completed an initial autonomous check for auth and 2) when the user completes
			 * a login
			 *
			 * At this point, we only want to notify the parent in case #2 - and this avoids
			 * us firing up a userinfo.get on every page load by an auth'd user
			 */
			function googlePlusSignInCallback( authResult ) {
				if ( googlePlusButtonHasBeenClicked ) {
					if ( 'undefined' != typeof authResult.error ) {
						googlePlusSignInEvent( { error: authResult.error } );
					} else {
						jQuery.when( googlePlusGetProfile() ).done( function( profileArgs ) {
							var data = {};
							data.code = authResult.code;
							data.access_token = authResult.access_token;
							data.name = profileArgs.displayName;
							data.avatar = profileArgs.image.url;
							data.link = profileArgs.url;
							data.uid = profileArgs.id;
							data.email = profileArgs['emails'].filter( function( v ) {
								return v.type === 'account'; // Filter out the primary email
							} )[0].value;
							googlePlusSignInEvent( data );
						} );
					}
				}
			}

			/**
			 * Fetch the user's profile
			 */
			function googlePlusGetProfile() {
				var dfd = jQuery.Deferred();
				gapi.client.load( 'plus', 'v1', function() {
					var request = gapi.client.plus.people.get( { userId: 'me' } );
					request.execute( function( resp ) {
						dfd.resolve( resp );
					} );
				} );
				return dfd.promise();
			}

			/**
			 * Utility function to send sign in events to the parent of this iframe
			 */
			function googlePlusSignInEvent( data ) {
				pm( {
					target: window.parent,
					type: 'googlePlusSignIn',
					data: data,
					origin: 'http://sekharpadikkal.wordpress.com'
				} );
			}

			/**
			 * Render the button (attaches Google+ click and auth callbacks)
			 * We use htmlspecialchars here instead of esc_attr to avoid loading all of WP
			 * for a single function call
			 */
			function googlePlusButtonRender() {
				gapi.signin.render( 'customButton', {
					'callback': 'googlePlusSignInCallback',
					'clientid': '108380595987-4e427srhd9jr0lsnohleutb2ilbuof70.apps.googleusercontent.com',
					'cookiepolicy': 'single_host_origin',
					'scope': 'profile email',
					'accesstype' : 'offline'
				} );

			}
		</script>
		<script type="text/javascript" src="client-plusone.js" gapi_processed="true"></script>

		<div id="customButton" data-gapiattached="true">
			<span class="icon"></span>
			<span class="buttonText"></span>
		</div>
	

<iframe name="oauth2relay2142400108" id="oauth2relay2142400108" src="postmessageRelay.htm" tabindex="-1" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe><iframe src="https://accounts.google.com/o/oauth2/auth?immediate=true&scope=profile+email&response_type=code+token+id_token+gsession&redirect_uri=postmessage&access_type=offline&cookie_policy=single_host_origin&proxy=oauth2relay2142400108&state=1900466982%7C0.3632981273&origin=https://public-api.wordpress.com&include_granted_scopes=true&client_id=108380595987-4e427srhd9jr0lsnohleutb2ilbuof70.apps.googleusercontent.com&authuser=0&hl=en&from_login=1&as=c0a212019a4eaa9" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe></body></html>